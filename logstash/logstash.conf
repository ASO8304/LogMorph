# ===========================
# Input Section: Receive logs via UDP
# ===========================
input {
  udp {
    port => 5140                          # Listen on UDP port 5140
    codec => plain { charset => "UTF-8" } # Decode incoming messages as plain UTF-8 text
  }
}

# ===========================
# Filter Section: Parse and enrich logs
# ===========================
filter {
  
  mutate { gsub => [ "message", "\s+", " " ] }

  # ---- Use Dissect for fast structured parsing ----
  dissect {
    mapping => {
      "message" => "[%{timestamp}|%{skip1}]: %{skip2->} [%{in_mac} %{out_mac}] %{dir1} %{dir2} %{len} %{proto} %{src_ip} %{dst_ip} %{df} %{zero} %{src_port} %{dst_port} %{+description}"
    }
    remove_field => ["skip1", "skip2", "zero"]
  }

  mutate {
    convert => {
      "len"      => "integer"
      "proto"    => "integer"
      "src_port" => "integer"
      "dst_port" => "integer"
    }
  }
}

# ===========================
# Output Section: Send processed logs to destination
# ===========================
output {
  # ---- Send log batch as JSON to FastAPI endpoint ----
  http {
    url          => "http://127.0.0.1:10000/logs"  # FastAPI backend receiver
    http_method  => "post"
    format       => "json_batch"                   # Send all events in a single JSON array
    content_type => "application/json"
    retry_failed => false                          # Do not retry failed sends
  }

  # ---- Debug output to console ----
  stdout {
    codec => rubydebug  # Pretty-print log for debugging
  }
}
